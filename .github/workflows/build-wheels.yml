name: Build and upload to PyPI

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          # Build for Python 3.11-3.13
          CIBW_BUILD: cp311-* cp312-* cp313-*

          # Skip 32-bit builds and musllinux (unless needed)
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux*"

          # macOS: Build universal wheels for Intel + Apple Silicon
          CIBW_ARCHS_MACOS: "x86_64 arm64 universal2"

          # Linux: Build for x86_64 and aarch64
          CIBW_ARCHS_LINUX: "x86_64 aarch64"

          # Windows: Build for x86_64 only
          CIBW_ARCHS_WINDOWS: "AMD64"

          # Use oldest-supported-numpy for building (already in pyproject.toml)
          CIBW_BUILD_VERBOSITY: 1

          # Test the built wheels
          CIBW_TEST_COMMAND: "python -c 'import pyvolgrid; print(pyvolgrid.__version__)'"

          # Environment variables for macOS universal builds
          CIBW_ENVIRONMENT_MACOS: >
            CMAKE_OSX_ARCHITECTURES="x86_64;arm64"
            ARCHFLAGS="-arch x86_64 -arch arm64"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install build dependencies
        run: python -m pip install build

      - name: Build sdist
        run: python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # Only upload on tag pushes (releases)
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi
      url: https://pypi.org/p/pyvolgrid
    permissions:
      id-token: write # For trusted publishing

    steps:
      - uses: actions/download-artifact@v5
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # Use trusted publishing (no API key needed)
          # You'll need to configure this in PyPI
          verbose: true

  upload_test_pypi:
    name: Upload to Test PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # Upload to test PyPI on main branch pushes (for testing)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pyvolgrid
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v5
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Upload to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
