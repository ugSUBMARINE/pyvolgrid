name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    # This tests the package on multiple OS and Python versions using the latest stable numpy
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --group dev

      - name: Install package
        run: uv pip install -e . --no-deps

      - name: Run tests
        run: uv run pytest -v

  test-numpy-1-26:
    # This job specifically tests compatibility with NumPy 1.26 on Ubuntu
    name: Test NumPy 1.26 compatibility
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --group dev

      - name: Install specific NumPy version
        run: uv pip install "numpy~=1.26"

      - name: Install package
        run: uv pip install -e . --no-deps

      - name: Test import and basic functionality
        run: |
          uv run python -c "
          import numpy as np
          import pyvolgrid
          print(f'NumPy version: {np.__version__}')
          print(f'PyVolGrid version: {pyvolgrid.__version__}')

          # Test basic functionality
          coords = [[0, 0, 0], [2, 0, 0]]
          radii = [1.0, 0.5]
          volume = pyvolgrid.volume_from_spheres(coords, radii)
          print(f'Test volume calculation: {volume:.3f}')
          "

      - name: Run tests
        run: uv run pytest -v
